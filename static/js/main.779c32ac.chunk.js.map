{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","hadleButtonPrev","props","images","step","itemWidth","frameSize","infinite","max","length","setState","hadleButtonNext","this","animationDuration","imageStyle","width","transition","transform","className","style","map","image","src","alt","type","onClick","React","Component","App","hadleChangeSteps","event","Number","target","value","handleChangeFrameSize","handleChangeItemWidth","handleChangeAnimationDuration","handleChangeInfinite","Boolean","checked","htmlFor","onChange","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.779c32ac.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  position: number;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Carousel extends React.Component<CarouselProps, State> {\n  state = {\n    position: 0,\n  };\n\n  hadleButtonPrev = () => {\n    const {\n      images, step, itemWidth, frameSize, infinite,\n    } = this.props;\n    const { position } = this.state;\n\n    const max = (images.length * itemWidth) - (itemWidth * frameSize);\n\n    if (position - itemWidth * step >= 0) {\n      this.setState(state => (\n        { position: state.position - itemWidth * step }));\n    } else if (infinite && !position) {\n      this.setState({ position: max });\n    } else {\n      this.setState({ position: 0 });\n    }\n  };\n\n  hadleButtonNext = () => {\n    const {\n      images, step, itemWidth, frameSize, infinite,\n    } = this.props;\n    const { position } = this.state;\n\n    const max = (images.length * itemWidth) - (itemWidth * frameSize);\n\n    if ((position + itemWidth * step) < max) {\n      this.setState(state => (\n        { position: state.position + itemWidth * step }));\n    } else if (infinite && max <= (position + itemWidth * step)) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState(state => (\n        { position: state.position + (max - state.position) }\n      ));\n    }\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, animationDuration,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const imageStyle = {\n      width: itemWidth,\n      transition: `transform ${animationDuration}ms`,\n      transform: `translateX(-${position}px)`,\n    };\n\n    return (\n      <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n        <ul className=\"Carousel__list\">\n          {images.map(image => {\n            return (\n              <li key={image} className=\"Carousel__picture\">\n                <img\n                  src={image}\n                  alt={image}\n                  style={imageStyle}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={this.hadleButtonPrev}\n        >\n          Prev\n\n        </button>\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={this.hadleButtonNext}\n          data-cy=\"next\"\n        >\n          Next\n\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nexport interface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  hadleChangeSteps = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: Number(event.target.value) });\n  };\n\n  handleChangeFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: Number(event.target.value),\n    });\n  };\n\n  handleChangeItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: Number(event.target.value),\n    });\n  };\n\n  handleChangeAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: Number(event.target.value) * 1000,\n    });\n  };\n\n  handleChangeInfinite = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinite: Boolean(event.target.checked),\n    });\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <div className=\"containerOfInputs\">\n          <label\n            htmlFor=\"stepId\"\n            className=\"containerOfInputs__label\"\n          >\n            Step:\n            <input\n              className=\"containerOfInputs__input\"\n              onChange={this.hadleChangeSteps}\n              type=\"number\"\n              id=\"stepId\"\n              value={step}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"containerOfInputs__label\"\n          >\n            FrameSize:\n            <input\n              className=\"containerOfInputs__input\"\n              onChange={this.handleChangeFrameSize}\n              type=\"number\"\n              id=\"frameId\"\n              value={frameSize}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemId\"\n            className=\"containerOfInputs__label\"\n          >\n            Item Width:\n            <input\n              className=\"containerOfInputs__input\"\n              onChange={this.handleChangeItemWidth}\n              type=\"number\"\n              id=\"itemId\"\n              value={itemWidth}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationId\"\n            className=\"containerOfInputs__label\"\n          >\n            Animation Duration(seconds):\n            <input\n              className=\"containerOfInputs__input\"\n              onChange={this.handleChangeAnimationDuration}\n              type=\"number\"\n              id=\"animationId\"\n              value={animationDuration / 1000}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infiniteId\"\n            className=\"containerOfInputs__label\"\n          >\n            Animation Infinite:\n            <input\n              className=\"containerOfInputs__input\"\n              onChange={this.handleChangeInfinite}\n              type=\"checkbox\"\n              id=\"infiniteId\"\n            />\n\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}