{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","hadleButtonPrev","props","images","step","itemWidth","frameSize","infinite","max","length","setState","prevState","hadleButtonNext","this","animationDuration","imageStyle","width","transition","transform","className","style","map","image","src","alt","type","onClick","React","Component","App","hadleChangeSteps","event","Number","target","value","handleChangeFrameSize","handleChangeItemWidth","handleChangeAnimationDuration","handleChangeInfinite","Boolean","onChange","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d27fffd.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  position: number;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Carousel extends React.Component<CarouselProps, State> {\n  state = {\n    position: 0,\n  };\n\n  hadleButtonPrev = () => {\n    const {\n      images, step, itemWidth, frameSize, infinite,\n    } = this.props;\n    const { position } = this.state;\n\n    const max = (images.length * itemWidth) - (itemWidth * frameSize);\n\n    if (position - itemWidth * step >= 0) {\n      this.setState(prevState => (\n        { position: prevState.position - itemWidth * step }));\n    } else if (infinite && !position) {\n      this.setState({ position: max });\n    } else {\n      this.setState({ position: 0 });\n    }\n  };\n\n  hadleButtonNext = () => {\n    const {\n      images, step, itemWidth, frameSize, infinite,\n    } = this.props;\n    const { position } = this.state;\n\n    const max = (images.length * itemWidth) - (itemWidth * frameSize);\n\n    if ((position + itemWidth * step) < max) {\n      this.setState(state => (\n        { position: state.position + itemWidth * step }));\n    } else if (infinite && max <= (position + itemWidth * step)) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState(state => (\n        { position: state.position + (max - state.position) }\n      ));\n    }\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, animationDuration,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const imageStyle = {\n      width: itemWidth,\n      transition: `transform ${animationDuration}ms`,\n      transform: `translateX(-${position}px)`,\n    };\n\n    return (\n      <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n        <ul className=\"Carousel__list\">\n          {images.map(image => {\n            return (\n              <li key={image} className=\"Carousel__picture\">\n                <img\n                  src={image}\n                  alt={image}\n                  style={imageStyle}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={this.hadleButtonPrev}\n        >\n          Prev\n\n        </button>\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={this.hadleButtonNext}\n        >\n          Next\n\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nexport interface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  hadleChangeSteps = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: Number(event.target.value) });\n  };\n\n  handleChangeFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: Number(event.target.value),\n    });\n  };\n\n  handleChangeItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: Number(event.target.value),\n    });\n  };\n\n  handleChangeAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: Number(event.target.value) * 1000,\n    });\n  };\n\n  handleChangeInfinite = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinite: Boolean(event.target.value),\n    });\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <div className=\"containerOfInputs\">\n          <label className=\"containerOfInputs__label\">\n            Step:\n            {' '}\n            <input\n              onChange={this.hadleChangeSteps}\n              type=\"number\"\n              id=\"step\"\n              value={step}\n            />\n          </label>\n\n          <label className=\"containerOfInputs__label\">\n            FrameSize:\n            {' '}\n            <input\n              onChange={this.handleChangeFrameSize}\n              type=\"number\"\n              id=\"frameSize\"\n              value={frameSize}\n            />\n          </label>\n\n          <label className=\"containerOfInputs__label\">\n            Item Width:\n            {' '}\n            <input\n              onChange={this.handleChangeItemWidth}\n              type=\"number\"\n              id=\"itemWidth\"\n              value={itemWidth}\n            />\n          </label>\n\n          <label className=\"containerOfInputs__label\">\n            Animation Duration(seconds):\n            {' '}\n            <input\n              onChange={this.handleChangeAnimationDuration}\n              type=\"number\"\n              id=\"animationDuration\"\n              value={animationDuration / 1000}\n            />\n          </label>\n\n          <label className=\"containerOfInputs__label\">\n            Animation Infinite:\n            {' '}\n            <input\n              onChange={this.handleChangeInfinite}\n              type=\"checkbox\"\n            />\n\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}